{"version":3,"sources":["webpack:///webpack/bootstrap 96fd04f465f8e0c46c28","webpack:///./src/index.js","webpack:///./src/node-deps.js","webpack:///external \"crypto\"","webpack:///external \"path\""],"names":["httpRequestMethod","canonicalURI","canonicalQueryString","canonicalHeaders","signedHeaders","requestPayload","emptyHash","join","buildCanonicalRequest","secretAccessKey","date","region","service","reduce","acc","val","preCalculateSigningKey","stringToSign","signingKey","preCalculatedSign","sign","formatDateTime","buildStringToSign","buildAuthorization","hash","algorithm","toISOString","replace","requestDate","credentialScope","hashedCanonicalRequest","accessKeyId","signature","map","item","key","data","encoding","update","digest","hmac","normalize"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 96fd04f465f8e0c46c28","import {hash, hmac, normalize} from 'deps';\n\nexport {hash};\n\nconst algorithm = 'AWS4-HMAC-SHA256';\nconst emptyHash = 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\n\n/**\n * Formats a Date object to an AWS date string\n *\n * @param {!Date} date - The date\n * @returns {string} - The formatted date string\n */\nexport function formatDateTime(date) {\n\treturn date\n\t\t.toISOString()\n\t\t.replace(/-|:|(\\.\\d+)/g, '');\n}\n\n/**\n * Creates the canonical request\n * https://docs.aws.amazon.com/general/latest/gr/sigv4-create-canonical-request.html\n *\n * @param {!string} httpRequestMethod - The HTTP request method (e.g. `GET` or `POST`)\n * @param {!string} canonicalURI - The canonical URI\n * @param {!string} canonicalQueryString - The canonical query string\n * @param {!string} canonicalHeaders - The canonical headers\n * @param {!string} signedHeaders - The signed headers\n * @param {!string} requestPayload - The payload of the request\n * @returns {Promise<string>} - The canonical request\n */\nexport async function buildCanonicalRequest(httpRequestMethod, canonicalURI, canonicalQueryString, canonicalHeaders,\n                                            signedHeaders, requestPayload='') {\n\treturn [\n\t\thttpRequestMethod,\n\t\tcanonicalURI,\n\t\tcanonicalQueryString,\n\t\tcanonicalHeaders,\n\t\t'',\n\t\tsignedHeaders,\n\t\tawait (requestPayload ? hash(requestPayload) : emptyHash)\n\t].join('\\n');\n}\n\n/**\n * Creates the string to sign\n * https://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html\n *\n * @param {!string} requestDate - The request date (`YYYMMDDThhmmssZ`)\n * @param {!string} credentialScope - the credential scope (formatted as `YYYYMMDD/region/service/aws4_request`)\n * @param {!string} hashedCanonicalRequest\n * @returns {string} - The string to sign\n */\nexport function buildStringToSign(requestDate, credentialScope, hashedCanonicalRequest) {\n\treturn [\n\t\talgorithm,\n\t\trequestDate,\n\t\tcredentialScope,\n\t\thashedCanonicalRequest\n\t].join('\\n');\n}\n\n/**\n * Pre-calculates the signing key\n * https://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html\n *\n * @param {!string} secretAccessKey - The secret access key for the AWS account\n * @param {!string} date - The date in YYYYMMDD format\n * @param {!string} region - The AWS region (e.g. `us-east-1`)\n * @param {!string} service - The AWS service (e.g. `iam`)\n * @returns {Promise<string>} - The pre-calculated signing key\n */\nexport async function preCalculateSigningKey(secretAccessKey, date, region, service) {\n\treturn [\n\t\tdate,\n\t\tregion,\n\t\tservice,\n\t\t'aws4_request'\n\t].reduce(\n\t\tasync (acc, val) => hmac(await acc, val),\n\t\t`AWS4${secretAccessKey}`\n\t);\n}\n\n/**\n * Pre-calculates the signature\n * https://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html\n *\n * @param {!string} signingKey - The pre-calculated signing key\n * @param {!string} stringToSign - The string to sign\n * @returns {Promise<string>} - The pre-calculated signature\n */\nexport function preCalculatedSign(signingKey, stringToSign) {\n\treturn hmac(signingKey, stringToSign, 'hex');\n}\n\n/**\n * Calculates the signature\n * https://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html\n *\n * @param {!string} secretAccessKey - The secret access key for the AWS account\n * @param {!string} date - The date in YYYYMMDD format\n * @param {!string} region - The AWS region (e.g. `us-east-1`)\n * @param {!string} service - The AWS service (e.g. `iam`)\n * @param {!string} stringToSign - The string to sign\n * @returns {Promise<string>} - The signature\n */\nexport async function sign(secretAccessKey, date, region, service, stringToSign) {\n\tconst signingKey = await preCalculateSigningKey(secretAccessKey, date, region, service);\n\n\treturn preCalculatedSign(signingKey, stringToSign);\n}\n\n/**\n * Creates the authorization string\n * https://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html\n *\n * @param {!string} accessKeyId\n * @param {!string} credentialScope\n * @param {!string} signedHeaders\n * @param {!string} signature\n * @returns {string}\n */\nexport function buildAuthorization(accessKeyId, credentialScope, signedHeaders, signature) {\n\treturn algorithm + ' ' + [\n\t\t['Credential', `${accessKeyId}/${credentialScope}`],\n\t\t['SignedHeaders', signedHeaders],\n\t\t['Signature', signature]\n\t]\n\t\t.map(item => item.join('='))\n\t\t.join(', ');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import {normalize} from 'path';\nimport {createHmac, createHash} from 'crypto';\nconst algorithm = 'sha256';\n\nexport {normalize} from 'path';\n\n/**\n * Computes the HMAC\n *\n * @param {!string} key - The key\n * @param {!string} data - The data to hash\n * @param {?string} encoding - The encoding type (hex)\n * @returns {Promise<string|buffer>} - The output HMAC\n */\nexport async function hmac(key, data, encoding) {\n\treturn createHmac(algorithm, key)\n\t\t.update(data)\n\t\t.digest(encoding);\n}\n\n/**\n * Computes the hash\n *\n * @param {!string} data - The data to hash\n * @returns {Promise<string>} - The hashed output\n */\nexport async function hash(data) {\n\treturn createHash(algorithm)\n\t\t.update(data)\n\t\t.digest('hex');\n}\n\n\n// WEBPACK FOOTER //\n// ./src/node-deps.js","module.exports = require(\"crypto\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"crypto\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}