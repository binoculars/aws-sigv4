{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap c44590f75c5eba482bee","webpack:///./src/index.js","webpack:///./src/web-deps.js"],"names":["formatDateTime","buildCanonicalRequest","buildStringToSign","preCalculateSigningKey","preCalculatedSign","sign","buildAuthorization","hash","algorithm","emptyHash","date","toISOString","replace","requestPayload","Promise","resolve","then","httpRequestMethod","canonicalURI","canonicalQueryString","canonicalHeaders","signedHeaders","hashedRequestPayload","join","requestDate","credentialScope","hashedCanonicalRequest","region","service","secretAccessKey","steps","promises","signingKey","data","stringToSign","accessKeyId","signature","map","item","hmac","crypto","window","msCrypto","subtle","webkitSubtle","normalize","encodeURI","toHex","Uint8Array","buffer","i","bytes","length","toString","byte","str","toBinary","TextEncoder","encode","ArrayBuffer","Uint16Array","buf","len","bufView","charCodeAt","hashOptions","name","algorithmSign","importKey","key","importedKey","digest"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"sigv4\"] = factory();\n\telse\n\t\troot[\"sigv4\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c44590f75c5eba482bee","import {hash, hmac, normalize} from 'deps';\n\nexport {hash};\n\nconst algorithm = 'AWS4-HMAC-SHA256';\nconst emptyHash = 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\n\n/**\n * Formats a Date object to an AWS date string\n *\n * @param {!Date} date - The date\n * @returns {string} - The formatted date string\n */\nexport function formatDateTime(date) {\n\treturn date\n\t\t.toISOString()\n\t\t.replace(/-|:|(\\.\\d+)/g, '');\n}\n\n/**\n * Creates the canonical request\n * https://docs.aws.amazon.com/general/latest/gr/sigv4-create-canonical-request.html\n *\n * @param {!string} httpRequestMethod - The HTTP request method (e.g. `GET` or `POST`)\n * @param {!string} canonicalURI - The canonical URI\n * @param {!string} canonicalQueryString - The canonical query string\n * @param {!string} canonicalHeaders - The canonical headers\n * @param {!string} signedHeaders - The signed headers\n * @param {!string} requestPayload - The payload of the request\n * @returns {Promise<string>} - The canonical request\n */\nexport function buildCanonicalRequest(httpRequestMethod, canonicalURI, canonicalQueryString, canonicalHeaders, signedHeaders,\n                                 requestPayload='') {\n\treturn (requestPayload ? hash(requestPayload) : Promise.resolve(emptyHash))\n\t\t.then(hashedRequestPayload => [\n\t\t\thttpRequestMethod,\n\t\t\tcanonicalURI,\n\t\t\tcanonicalQueryString,\n\t\t\tcanonicalHeaders,\n\t\t\t'',\n\t\t\tsignedHeaders,\n\t\t\thashedRequestPayload\n\t\t].join('\\n'));\n}\n\n/**\n * Creates the string to sign\n * https://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html\n *\n * @param {!string} requestDate - The request date (`YYYMMDDThhmmssZ`)\n * @param {!string} credentialScope - the credential scope (formatted as `YYYYMMDD/region/service/aws4_request`)\n * @param {!string} hashedCanonicalRequest\n * @returns {string} - The string to sign\n */\nexport function buildStringToSign(requestDate, credentialScope, hashedCanonicalRequest) {\n\treturn [\n\t\talgorithm,\n\t\trequestDate,\n\t\tcredentialScope,\n\t\thashedCanonicalRequest\n\t].join('\\n');\n}\n\n/**\n * Pre-calculates the signing key\n * https://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html\n *\n * @param {!string} secretAccessKey - The secret access key for the AWS account\n * @param {!string} date - The date in YYYYMMDD format\n * @param {!string} region - The AWS region (e.g. `us-east-1`)\n * @param {!string} service - The AWS service (e.g. `iam`)\n * @returns {Promise<string>} - The pre-calculated signing key\n */\nexport function preCalculateSigningKey(secretAccessKey, date, region, service) {\n\tconst steps = [\n\t\tdate,\n\t\tregion,\n\t\tservice,\n\t\t'aws4_request'\n\t];\n\n\tlet promises = Promise.resolve(`AWS4${secretAccessKey}`);\n\n\tfor (const data of steps)\n\t\tpromises = promises.then(signingKey => hmac(signingKey, data));\n\n\treturn promises;\n}\n\n/**\n * Pre-calculates the signature\n * https://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html\n *\n * @param {!string} signingKey - The pre-calculated signing key\n * @param {!string} stringToSign - The string to sign\n * @returns {Promise<string>} - The pre-calculated signature\n */\nexport function preCalculatedSign(signingKey, stringToSign) {\n\treturn hmac(signingKey, stringToSign, 'hex');\n}\n\n/**\n * Calculates the signature\n * https://docs.aws.amazon.com/general/latest/gr/sigv4-calculate-signature.html\n *\n * @param {!string} secretAccessKey - The secret access key for the AWS account\n * @param {!string} date - The date in YYYYMMDD format\n * @param {!string} region - The AWS region (e.g. `us-east-1`)\n * @param {!string} service - The AWS service (e.g. `iam`)\n * @param {!string} stringToSign - The string to sign\n * @returns {Promise<string>} - The signature\n */\nexport function sign(secretAccessKey, date, region, service, stringToSign) {\n\treturn preCalculateSigningKey(secretAccessKey, date, region, service)\n\t\t.then(signingKey => preCalculatedSign(signingKey, stringToSign));\n}\n\n/**\n * Creates the authorization string\n * https://docs.aws.amazon.com/general/latest/gr/sigv4-add-signature-to-request.html\n *\n * @param {!string} accessKeyId\n * @param {!string} credentialScope\n * @param {!string} signedHeaders\n * @param {!string} signature\n * @returns {string}\n */\nexport function buildAuthorization(accessKeyId, credentialScope, signedHeaders, signature) {\n\treturn algorithm + ' ' + [\n\t\t['Credential', `${accessKeyId}/${credentialScope}`],\n\t\t['SignedHeaders', signedHeaders],\n\t\t['Signature', signature]\n\t]\n\t\t.map(item => item.join('='))\n\t\t.join(', ');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","const crypto = window.crypto || window.msCrypto;\nconst subtle = crypto.subtle || crypto.webkitSubtle;\nconst algorithm = 'sha-256';\n\nexport const normalize = encodeURI;\n\nfunction toHex(buffer) {\n\tconst bytes = new Uint8Array(buffer);\n\n\tlet str = '';\n\n\tfor (let i = 0; i < bytes.length; ++i) {\n\t\tconst byte = bytes[i].toString(16);\n\t\tstr += `${byte.length < 2 ? '0' : ''}${byte}`;\n\t}\n\n\treturn str;\n}\n\nconst toBinary = ('TextEncoder' in window) ?\n\t(str => (new TextEncoder()).encode(str)) :\n\t(str => {\n\t\tconst len = str.length;\n\t\tconst buf = new ArrayBuffer(len * 2);\n\t\tconst bufView = new Uint16Array(buf);\n\n\t\tfor (let i = 0; i < len; i++)\n\t\t\tbufView[i] = str.charCodeAt(i);\n\n\t\treturn buf;\n\t});\n\nconst hashOptions = {\n\tname: algorithm\n};\n\nconst algorithmSign = {\n\tname: 'HMAC',\n\thash: hashOptions\n};\n\n/**\n * Computes the HMAC\n *\n * @param {!string|ArrayBuffer} key - The key\n * @param {!string} data - The data to hash\n * @param {?string} [encoding=binary] - The encoding type (hex|binary)\n * @returns {string|ArrayBuffer} - The output HMAC\n */\nexport function hmac(key, data, encoding='binary') {\n\treturn subtle\n\t\t.importKey(\n\t\t\t'raw',\n\t\t\ttypeof key === 'string' ? toBinary(key) : key,\n\t\t\talgorithmSign,\n\t\t\tfalse,\n\t\t\t['sign']\n\t\t)\n\t\t.then(importedKey => subtle\n\t\t\t.sign(\n\t\t\t\talgorithmSign,\n\t\t\t\timportedKey,\n\t\t\t\ttoBinary(data)\n\t\t\t)\n\t\t)\n\t\t.then(buffer =>\n\t\t\tencoding === 'binary' ? buffer : toHex(buffer)\n\t\t);\n}\n\n/**\n * Computes the hash\n *\n * @param {!string} data - The data to hash\n * @returns {string} - The hashed output\n */\nexport function hash(data) {\n\treturn subtle\n\t\t.digest(\n\t\t\thashOptions,\n\t\t\ttoBinary(data)\n\t\t)\n\t\t.then(toHex);\n}\n\n\n// WEBPACK FOOTER //\n// ./src/web-deps.js"],"sourceRoot":""}